{% block oro_ticker_symbol_widget %}
    <script type="text/javascript">
        $(function() {
            var cache = {};
            $("#{{ id }}").typeahead({
                source: function (request, process) {
                    YAHOO = {
                        Finance: {
                            SymbolSuggest: {
                                ssCallback: function (data) {
                                    var result = $.map(data.ResultSet.Result, function (item) {
                                        return item.name + " (" + item.symbol + ")";
                                    });
                                    $.each(data.ResultSet.Result, function (itemKey, item) {
                                        cache[item.name + " (" + item.symbol + ")"] = item.symbol;
                                    });
                                    process(result)
                                }
                            }
                        }
                    };
                    $.ajax({
                        type: "GET",
                        dataType: "jsonp",
                        jsonp: "callback",
                        jsonpCallback: "YAHOO.Finance.SymbolSuggest.ssCallback",
                        data: {
                            query: request
                        },
                        cache: true,
                        url: "http://autoc.finance.yahoo.com/autoc"
                    });
                },
                updater: function(item) {
                    if (typeof cache[item] != 'undefined') {
                        return cache[item];
                    } else {
                        return item;
                    }
                }
            });
        });
    </script>

    {{ form_widget(form) }}
{% endblock %}

{% block genemu_jqueryselect2_country_row %}
    {{ block('genemu_jqueryselect2_row') }}
{% endblock %}

{% block genemu_jqueryselect2_choice_row %}
    {{ block('genemu_jqueryselect2_row') }}
{% endblock %}

{% block genemu_jqueryselect2_entity_row %}
    {{ block('genemu_jqueryselect2_row') }}
{% endblock %}

{% block oro_jqueryselect2_hidden_row %}
    {{ block('genemu_jqueryselect2_row') }}
{% endblock %}

{% block genemu_jqueryselect2_row %}
    {{ form_row(form) }}
    {{ form_javascript(form) }}
{% endblock %}

{% block genemu_jqueryselect2_javascript %}
    <script type="text/javascript">
        (function() {
            var $field = $('#{{ id }}');

            {% block genemu_jqueryselect2_javascript_prototype %}
                var select2Config = {{ configs|json_encode|raw }};

                if ($field[0].tagName.toLowerCase() == 'input') {
                    var getTitle = function (data) {
                        if (!data) {
                            return '';
                        } else {
                            var result = [];
                            var properties = select2Config.properties;
                            for (var i = 0; i < properties.length; i++) {
                                result.push(data[properties[i]]);
                            }
                            return data.join(' ');
                        }
                    };

                    select2Config.initSelection = function(element, callback) {
                        callback({'id': element.val(), 'text': getTitle(element.data('selected'))});
                    };
                }

                {% if configs.datasource is defined %}
                    {{ block('oro_combobox_dataconfig_' ~ configs.datasource) }}
                {% endif %}

                $field.select2(select2Config);
            {% endblock %}
        })();
    </script>
{% endblock %}

{% block oro_combobox_dataconfig_autocomplete %}
    {% set url = configs.ajax.url is defined ? configs.ajax.url : path(configs.route) %}

    select2Config.ajax = {
        'url': {{ url|json_encode|raw }},
        'data': function (query, page) {
            return {
                'page': page,
                'per_page': {{ configs.per_page|default(10) }},
                'name': "{{ configs.autocomplete_alias }}",
                'query': query
            };
        },
        'results': function (data, page) {
            return data;
        }
    }
{% endblock %}

{% block oro_combobox_dataconfig_grid %}
    {% set url = configs.ajax.url is defined ? configs.ajax.url : path(configs.route, {'_format': 'json'}) %}

    select2Config.ajax = {
        'url': {{ url|json_encode|raw }},
        'data': function (query, page) {
            return {
                '{{ configs.grid.name }}[_pager][_page]': page,
                '{{ configs.grid.name }}[_pager][_per_page]': {{ configs.per_page|default(10) }},
                '{{ configs.grid.name }}[_sort_by][{{ configs.grid.sort_by|default(configs.properties[0]) }}]': "{{ configs.grid.sort_order|default('ASC') }}",
                '{{ configs.grid.name }}[_filter][{{ configs.properties[0] }}][type]': 1,
                '{{ configs.grid.name }}[_filter][{{ configs.properties[0] }}][value]': query
            };
        },
        'results': function (data, page) {
            return {
                results: $.map(data.data, function(item) {
                    return {'id': item.id, 'text': item.{{- configs.properties[0] -}} };
                }),
                more: page*10 < data.options.totalRecords
            };
        }
    }
{% endblock %}

{% block oro_combobox_dataconfig_user %}
    {% set url = configs.ajax.url is defined ? configs.ajax.url : path(configs.route) %}

    var hilightSelection = function (str, selection) {
        return str.replace(new RegExp(selection.term, 'ig'), '<b>$&</b>');
    };
    var formatResult = function(object, container, query) {
        return '<img src="' + object.avatar + '"/> '
            + hilightSelection(object.first_name, query) + ' '
            + hilightSelection(object.last_name, query) + ' ('
            + hilightSelection(object.username, query) + ')<div>'
            + hilightSelection(object.email, query) + '</div>';
    };
    var formatSelection = function(object, container, query) {
        return '<img src="' + object.avatar + '"/> ' + object.first_name + ' ' + object.last_name;
    };

    select2Config.formatResult = formatResult;
    select2Config.formatSelection = formatSelection;
    select2Config.escapeMarkup = function(m) { return m; };
    select2Config.ajax = {
        'url': {{ url|json_encode|raw }},
        'data': function (query, page) {
            return {
                'page': page,
                'per_page': {{ configs.per_page|default(10) }},
                'q': query
            };
        },
        'results': function (data, page) {
            return data;
        }
    }
{% endblock %}
